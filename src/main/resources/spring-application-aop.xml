<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
    	http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:component-scan base-package="com.cy"/>

    <!-- 启动对@AspectJ注解的支持，并且service交给cglib代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <aop:config>
        <!-- <tx:annotation-driven transaction-manager="transactionManager" order="1"/> 事物的order比自定义的aspect的order小，才能保证事物包围自定义aop切面-->
        <!-- 切面 -->
        <aop:aspect id="logProxy" ref="logProxy" order="1">
            <!-- 切入点 -->
            <aop:pointcut id="servicePointcut" expression="execution(* com.cy.aop.*.*(..))" />
            <aop:around method="around" pointcut-ref="servicePointcut"/>
        </aop:aspect>
    </aop:config>
    <aop:config>
        <!-- 这种方式的aspect切面要实现指定接口才可以-->
        <aop:advisor advice-ref="paramProxy" pointcut-ref="servicePointcut"/>
    </aop:config>

</beans>